'''

class Node:
    def __init__(self, data):   # data -> value stored in node
        self.data = data
        self.next = None
'''

class Solution:
    def addOne(self,head):
        #Returns new head of linked List.
        
        def reverse(head):
            if head is None or head.next is None:
                return head
                
            prev = None
            curr = head
            
            while curr:
                nxt = curr.next
                curr.next = prev
                prev = curr
                curr = nxt
            
            return prev
        
        head = reverse(head)
        
        curr = head
        carry = 1
        prev = None
        
        while curr:
            total = curr.data + carry
            curr.data = total % 10
            carry = total // 10
            prev = curr
            curr = curr.next
        
        if carry:
            prev.next = Node(carry)
        
        return reverse(head)
